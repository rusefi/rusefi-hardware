* We include dram2 to be consistent with the PT2001 locations
#include "..\DRAM\dcdc_hpfp.def";
* This channel will control Fuel Pump and DCDC

#define  HSBatB4 hs7;
#define  LSB4 ls8;

#define  LSDCDC ls7;
*ucore0 cur3 use for Fuel pump
*ucore1 cur6 use for DCDC


*###############################################################################################################################

*### uc0 controls Fuel Pump using start 7 ########

* ### Initialization phase ###
init0:      stgn gain19.3 ossc;                     * Set the gain of the opamp of the current measure block 1 
            ldjr1 eoact0;                           * Load the eoinj line label Code RAM address into the register jr1 
            ldjr2 idle0;                            * Load the idle line label Code RAM address into the register jr2
            cwef jr1 _start row1;                   * If the start signal goes low, go to eoinj phase           

* ### Idle phase- the uPC loops here until start signal is present ###              
idle0:      joslr act7_start start7;                * Perform an actuation on act6 if start 6 (only) is active
            jmpf jr1;                               * If more than 1 start active at the same time(or none), no actuation

act7_start: dfsct hs7 ls8 undef;                    * Set the 2 shortcuts: VBAT, LS
            jmpr peak0;                             * Jump to launch phase

* ### Launch peak phase on bat ###
peak0:      load HPFP_Ipeak dac_ossc _ofs;          * Load the boost phase current threshold in the current DAC
            cwer hold0 cur3 row2;                   * Jump to hold phase when current is over threshold
            stos on on keep;                        * Turn VBAT on, LS on
            wait row12;                             * Wait for one of the previously defined conditions
            
* ### Hold phase on Vbat ###    
hold0:      ldcd rst _ofs keep keep HPFP_Thold_tot c1;   * Load the length of the total hold phase in counter 1
            load HPFP_Ihold dac_ossc _ofs;               * Load the hold current threshold in the DAC
            cwer eoact0 tc1 row2;                   * Jump to eoinj phase when tc1 reaches end of count
            cwer hold_on0 tc2 row3;                 * Jump to hold_on when tc2 reaches end of count
            cwer hold_off0 cur3 row4;               * Jump to hold_off when current is over threshold

hold_on0:   stos on on keep;                        * Turn VBAT on, LS on
            wait row124;                            * Wait for one of the previously defined conditions

hold_off0:  ldcd rst _ofs off on HPFP_Thold_off c2; * Load the length of the hold_off phase in counter 2 and turn VBAT off, LS on
            wait row123;                            * Wait for one of the previously defined conditions

* ### End of injection phase ###
eoact0:     stos off off keep;                      * Turn VBAT off, LS off
            jmpf jr2;                               * Jump back to idle phase
            
*###############################################################################################################################

*#### uc1 DCDC control ###

* ### Initialization phase ###
init1:      stgn gain5.8 ossc;                      * Set the gain of the opamp of the current measure block 56
           * stf low b1;
            dfsct undef LSDCDC undef;              
            stos keep off keep;
            load Iboost_L dac_ossc _ofs;
            load Iboost_H dac56h56n _ofs;
            stdm null;                              * Set the boost voltage DAC access mode
            cwer dcdc_idle _f1 row1;                * Wait table entry for flag1 going low
            cwer dcdc_on _vb row2;                  * Wait table entry for Vboost under Vboost_low threshold condition
            cwer dcdc_off vb row3;                  * Wait table entry for Vboost over Vboost_high threshold condition

* ### Asynchronous phase ###  
dcdc_on:    load Vboost_high boost _ofs;           * Load the upper Vboost threshold in vboost_dac register
            stdcctl async;
            * we may stop here if voltage never goes high
            * for instance if DrvEn is held low
            * and as such no updated DRAM will be loaded as we dont loop, we wait
            wait row13;
            
* ### Synchronous phase ### 
dcdc_off:   load Vboost_low boost _ofs;           * Load the upper Vboost threshold in vboost_dac register
            stdcctl sync;                           * Enable synchronous mode
            wait row12;

* ### Idle phase ### 
dcdc_idle:  stdcctl sync;                           * Enable synchronous mode
           * stf low b0;
            stos keep off keep;
            jocr dcdc_idle _f1;
            jmpr dcdc_on;                           * force the DC-DC converter on when flag 0 goes high

* ### End of Channel 3 - uCore0 code ###

